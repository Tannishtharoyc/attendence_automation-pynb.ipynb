{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1x3kOssjDO10VDOwl3c9uETEfTUAUHknK","timestamp":1718928373647}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8IubK8yA8D3R","outputId":"a301bf7a-4226-48de-96f7-15d59bd9e5f4","executionInfo":{"status":"ok","timestamp":1718927263021,"user_tz":-330,"elapsed":835,"user":{"displayName":"Tannishtha Roy Chowdhury","userId":"14832516516534713487"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Done\n","['.config', 'Training Images', 'Testing Images-20240620T232627Z-001.zip', 'drive', 'Face.data', 'sample_data']\n"]}],"source":["import zipfile\n","import os\n","\n","# Path to the uploaded zip file\n","zip_file_path = '/Training Images-20240620T232633Z-001.zip'\n","\n","#extract_path = 'path/to/extracted/dataset/'\n","# Unzip the file\n","with zipfile.ZipFile(zip_file_path,'r') as zip:\n","  zip.extractall()\n","  print('Done')\n","#with zipfile(zip_file_path, 'r') as zip_ref:\n","    #zip_ref.extractall()\n","\n","# List the directories to check the structure\n","extracted_dirs = os.listdir()\n","print(extracted_dirs)\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dxjik_jfi6gm","executionInfo":{"status":"ok","timestamp":1718926893189,"user_tz":-330,"elapsed":4705,"user":{"displayName":"Tannishtha Roy Chowdhury","userId":"14832516516534713487"}},"outputId":"b01ddff9-f13e-4fb2-d727-38a5939e3494"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["!pip install deepface"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-nNPIGmX9CIy","outputId":"f66b2782-928f-482e-abe4-0826d740b3d0","executionInfo":{"status":"ok","timestamp":1718922898070,"user_tz":-330,"elapsed":13796,"user":{"displayName":"Tannishtha Roy Chowdhury","userId":"14832516516534713487"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting deepface\n","  Downloading deepface-0.0.92-py3-none-any.whl (105 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m105.5/105.5 kB\u001b[0m \u001b[31m2.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: requests>=2.27.1 in /usr/local/lib/python3.10/dist-packages (from deepface) (2.31.0)\n","Requirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.10/dist-packages (from deepface) (1.25.2)\n","Requirement already satisfied: pandas>=0.23.4 in /usr/local/lib/python3.10/dist-packages (from deepface) (2.0.3)\n","Requirement already satisfied: gdown>=3.10.1 in /usr/local/lib/python3.10/dist-packages (from deepface) (5.1.0)\n","Requirement already satisfied: tqdm>=4.30.0 in /usr/local/lib/python3.10/dist-packages (from deepface) (4.66.4)\n","Requirement already satisfied: Pillow>=5.2.0 in /usr/local/lib/python3.10/dist-packages (from deepface) (9.4.0)\n","Requirement already satisfied: opencv-python>=4.5.5.64 in /usr/local/lib/python3.10/dist-packages (from deepface) (4.8.0.76)\n","Requirement already satisfied: tensorflow>=1.9.0 in /usr/local/lib/python3.10/dist-packages (from deepface) (2.15.0)\n","Requirement already satisfied: keras>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from deepface) (2.15.0)\n","Requirement already satisfied: Flask>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from deepface) (2.2.5)\n","Collecting mtcnn>=0.1.0 (from deepface)\n","  Downloading mtcnn-0.1.1-py3-none-any.whl (2.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.3/2.3 MB\u001b[0m \u001b[31m28.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting retina-face>=0.0.1 (from deepface)\n","  Downloading retina_face-0.0.17-py3-none-any.whl (25 kB)\n","Collecting fire>=0.4.0 (from deepface)\n","  Downloading fire-0.6.0.tar.gz (88 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m88.4/88.4 kB\u001b[0m \u001b[31m12.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting gunicorn>=20.1.0 (from deepface)\n","  Downloading gunicorn-22.0.0-py3-none-any.whl (84 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m84.4/84.4 kB\u001b[0m \u001b[31m9.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fire>=0.4.0->deepface) (1.16.0)\n","Requirement already satisfied: termcolor in /usr/local/lib/python3.10/dist-packages (from fire>=0.4.0->deepface) (2.4.0)\n","Requirement already satisfied: Werkzeug>=2.2.2 in /usr/local/lib/python3.10/dist-packages (from Flask>=1.1.2->deepface) (3.0.3)\n","Requirement already satisfied: Jinja2>=3.0 in /usr/local/lib/python3.10/dist-packages (from Flask>=1.1.2->deepface) (3.1.4)\n","Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask>=1.1.2->deepface) (2.2.0)\n","Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask>=1.1.2->deepface) (8.1.7)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from gdown>=3.10.1->deepface) (4.12.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from gdown>=3.10.1->deepface) (3.15.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from gunicorn>=20.1.0->deepface) (24.1)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.23.4->deepface) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.23.4->deepface) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.23.4->deepface) (2024.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->deepface) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->deepface) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->deepface) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->deepface) (2024.6.2)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (1.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (1.6.3)\n","Requirement already satisfied: flatbuffers>=23.5.26 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (24.3.25)\n","Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (0.5.4)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (0.2.0)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (3.9.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (18.1.1)\n","Requirement already satisfied: ml-dtypes~=0.2.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (0.2.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (3.3.0)\n","Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (3.20.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (67.7.2)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (4.12.2)\n","Requirement already satisfied: wrapt<1.15,>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (1.14.1)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (0.37.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (1.64.1)\n","Requirement already satisfied: tensorboard<2.16,>=2.15 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (2.15.2)\n","Requirement already satisfied: tensorflow-estimator<2.16,>=2.15.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow>=1.9.0->deepface) (2.15.0)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow>=1.9.0->deepface) (0.43.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from Jinja2>=3.0->Flask>=1.1.2->deepface) (2.1.5)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (2.27.0)\n","Requirement already satisfied: google-auth-oauthlib<2,>=0.5 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (1.2.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (3.6)\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (0.7.2)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->gdown>=3.10.1->deepface) (2.5)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->deepface) (1.7.1)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (5.3.3)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (0.4.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<2,>=0.5->tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (1.3.1)\n","Requirement already satisfied: pyasn1<0.7.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (0.6.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<2,>=0.5->tensorboard<2.16,>=2.15->tensorflow>=1.9.0->deepface) (3.2.2)\n","Building wheels for collected packages: fire\n","  Building wheel for fire (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for fire: filename=fire-0.6.0-py2.py3-none-any.whl size=117029 sha256=17793b310873d1e9dab64f9084e2feb40ac583938fc2ea741e3e7c8f6c876aca\n","  Stored in directory: /root/.cache/pip/wheels/d6/6d/5d/5b73fa0f46d01a793713f8859201361e9e581ced8c75e5c6a3\n","Successfully built fire\n","Installing collected packages: gunicorn, fire, mtcnn, retina-face, deepface\n","Successfully installed deepface-0.0.92 fire-0.6.0 gunicorn-22.0.0 mtcnn-0.1.1 retina-face-0.0.17\n"]}]},{"cell_type":"code","source":["from deepface import DeepFace\n","import os\n","\n","# Set the paths\n","train_dir = '/content/Training Images'\n","test_dir = '/content/drive/MyDrive/Testing Images'\n","\n","# Verify the directory structure\n","print(\"Training images:\")\n","print(os.listdir(train_dir))\n","print(\"Testing images:\")\n","print(os.listdir(test_dir))\n","\n","# DeepFace doesn't have a direct training function like other frameworks.\n","# Instead, it's more commonly used for pre-trained model inference and fine-tuning.\n","\n","# Perform face recognition using DeepFace\n","models = [\"VGG-Face\", \"Facenet\", \"OpenFace\", \"DeepFace\", \"DeepID\", \"Dlib\"]\n","\n","# Example to find the best model\n","result = DeepFace.find(img_path=\"/content/Training Images/Tannishtha Roy Chowdhury /14CB4572-63E4-448D-8FB5-FA73CBAA744A.jpg\", db_path=train_dir, model_name=models[0], enforce_detection=False)\n","print(result)\n","#df = pd.DataFrame(result)\n","#print(df.head())\n","print(result[0])\n"],"metadata":{"id":"zmItpv2L9LpB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718927570338,"user_tz":-330,"elapsed":153675,"user":{"displayName":"Tannishtha Roy Chowdhury","userId":"14832516516534713487"}},"outputId":"5b8dec46-b86d-43ce-cc23-50485c523bea"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["24-06-20 23:50:25 - Directory /root/.deepface created\n","24-06-20 23:50:25 - Directory /root/.deepface/weights created\n","Training images:\n","['Aishi Sarkar', 'Om Sarkar', 'Shreya Singha Roy ', 'Tannishtha Roy Chowdhury ', 'Debarati Sarkar']\n","Testing images:\n","['1000221691.webp', '1000226089.jpg', '1000204691.jpg', 'IMG_1916.JPG', '1000240110.jpg', '1000243414.jpg', 'IMG_20230311_100830_258_Original.JPG', 'IMG_20230311_133422_151_Original.JPG', 'IMG_1839.JPG', 'IMG_3251.JPG', 'IMG_5741.JPG', 'IMG_20230311_190326_Original.JPG', 'IMG_6073.JPG', 'IMG_6074.JPG', '1000239927.jpg']\n","24-06-20 23:50:25 - Found 59 newly added image(s), 0 removed image(s), 0 replaced image(s).\n"]},{"output_type":"stream","name":"stderr","text":["\rFinding representations:   0%|          | 0/59 [00:00<?, ?it/s]"]},{"output_type":"stream","name":"stdout","text":["24-06-20 23:50:31 - vgg_face_weights.h5 will be downloaded...\n"]},{"output_type":"stream","name":"stderr","text":["Downloading...\n","From: https://github.com/serengil/deepface_models/releases/download/v1.0/vgg_face_weights.h5\n","To: /root/.deepface/weights/vgg_face_weights.h5\n","\n","  0%|          | 0.00/580M [00:00<?, ?B/s]\u001b[A\n","  0%|          | 524k/580M [00:00<02:46, 3.48MB/s]\u001b[A\n","  1%|          | 4.19M/580M [00:00<00:30, 19.0MB/s]\u001b[A\n","  3%|▎         | 15.7M/580M [00:00<00:09, 57.4MB/s]\u001b[A\n","  5%|▍         | 27.3M/580M [00:00<00:07, 78.4MB/s]\u001b[A\n","  7%|▋         | 38.3M/580M [00:00<00:06, 88.9MB/s]\u001b[A\n","  9%|▊         | 49.8M/580M [00:00<00:05, 97.5MB/s]\u001b[A\n"," 11%|█         | 62.4M/580M [00:00<00:05, 103MB/s] \u001b[A\n"," 13%|█▎        | 74.4M/580M [00:00<00:04, 104MB/s]\u001b[A\n"," 15%|█▍        | 86.0M/580M [00:01<00:04, 102MB/s]\u001b[A\n"," 17%|█▋        | 97.5M/580M [00:01<00:04, 105MB/s]\u001b[A\n"," 19%|█▊        | 109M/580M [00:01<00:04, 99.1MB/s]\u001b[A\n"," 21%|██        | 119M/580M [00:01<00:05, 90.4MB/s]\u001b[A\n"," 22%|██▏       | 128M/580M [00:01<00:05, 89.0MB/s]\u001b[A\n"," 24%|██▍       | 138M/580M [00:01<00:05, 83.3MB/s]\u001b[A\n"," 25%|██▌       | 147M/580M [00:01<00:05, 78.0MB/s]\u001b[A\n"," 27%|██▋       | 155M/580M [00:01<00:05, 74.4MB/s]\u001b[A\n"," 28%|██▊       | 164M/580M [00:01<00:05, 75.2MB/s]\u001b[A\n"," 30%|██▉       | 172M/580M [00:02<00:05, 77.0MB/s]\u001b[A\n"," 31%|███▏      | 182M/580M [00:02<00:04, 82.8MB/s]\u001b[A\n"," 33%|███▎      | 191M/580M [00:02<00:04, 81.1MB/s]\u001b[A\n"," 35%|███▍      | 200M/580M [00:02<00:04, 83.9MB/s]\u001b[A\n"," 36%|███▌      | 209M/580M [00:02<00:04, 85.2MB/s]\u001b[A\n"," 38%|███▊      | 219M/580M [00:02<00:04, 88.7MB/s]\u001b[A\n"," 40%|███▉      | 230M/580M [00:02<00:03, 92.3MB/s]\u001b[A\n"," 41%|████      | 239M/580M [00:02<00:03, 90.3MB/s]\u001b[A\n"," 43%|████▎     | 249M/580M [00:02<00:03, 88.4MB/s]\u001b[A\n"," 44%|████▍     | 257M/580M [00:05<00:24, 13.4MB/s]\u001b[A\n"," 46%|████▋     | 269M/580M [00:05<00:16, 19.2MB/s]\u001b[A\n"," 48%|████▊     | 279M/580M [00:05<00:11, 25.2MB/s]\u001b[A\n"," 50%|████▉     | 290M/580M [00:05<00:08, 33.5MB/s]\u001b[A\n"," 52%|█████▏    | 301M/580M [00:05<00:06, 43.4MB/s]\u001b[A\n"," 54%|█████▎    | 311M/580M [00:05<00:05, 50.9MB/s]\u001b[A\n"," 55%|█████▌    | 321M/580M [00:05<00:04, 56.6MB/s]\u001b[A\n"," 57%|█████▋    | 331M/580M [00:05<00:03, 63.3MB/s]\u001b[A\n"," 59%|█████▊    | 340M/580M [00:05<00:03, 68.7MB/s]\u001b[A\n"," 60%|██████    | 350M/580M [00:05<00:03, 73.9MB/s]\u001b[A\n"," 62%|██████▏   | 361M/580M [00:06<00:02, 84.0MB/s]\u001b[A\n"," 64%|██████▍   | 371M/580M [00:06<00:02, 86.4MB/s]\u001b[A\n"," 66%|██████▌   | 381M/580M [00:06<00:02, 74.8MB/s]\u001b[A\n"," 68%|██████▊   | 392M/580M [00:06<00:02, 81.2MB/s]\u001b[A\n"," 69%|██████▉   | 401M/580M [00:06<00:02, 74.8MB/s]\u001b[A\n"," 71%|███████   | 409M/580M [00:06<00:02, 69.1MB/s]\u001b[A\n"," 72%|███████▏  | 417M/580M [00:08<00:10, 16.1MB/s]\u001b[A\n"," 73%|███████▎  | 424M/580M [00:08<00:07, 19.8MB/s]\u001b[A\n"," 74%|███████▍  | 430M/580M [00:08<00:06, 22.4MB/s]\u001b[A\n"," 75%|███████▌  | 435M/580M [00:08<00:05, 24.3MB/s]\u001b[A\n"," 76%|███████▋  | 443M/580M [00:08<00:04, 31.3MB/s]\u001b[A\n"," 78%|███████▊  | 450M/580M [00:08<00:03, 37.8MB/s]\u001b[A\n"," 79%|███████▉  | 459M/580M [00:09<00:02, 46.0MB/s]\u001b[A\n"," 81%|████████  | 469M/580M [00:09<00:01, 57.9MB/s]\u001b[A\n"," 83%|████████▎ | 480M/580M [00:09<00:01, 68.5MB/s]\u001b[A\n"," 84%|████████▍ | 490M/580M [00:09<00:01, 75.8MB/s]\u001b[A\n"," 86%|████████▌ | 500M/580M [00:09<00:00, 82.7MB/s]\u001b[A\n"," 88%|████████▊ | 512M/580M [00:09<00:00, 92.4MB/s]\u001b[A\n"," 90%|█████████ | 523M/580M [00:09<00:00, 95.3MB/s]\u001b[A\n"," 92%|█████████▏| 533M/580M [00:09<00:00, 92.6MB/s]\u001b[A\n"," 94%|█████████▎| 543M/580M [00:09<00:00, 91.7MB/s]\u001b[A\n"," 95%|█████████▌| 553M/580M [00:10<00:00, 83.9MB/s]\u001b[A\n"," 97%|█████████▋| 562M/580M [00:10<00:00, 65.5MB/s]\u001b[A\n"," 98%|█████████▊| 570M/580M [00:10<00:00, 61.9MB/s]\u001b[A\n","100%|██████████| 580M/580M [00:10<00:00, 54.8MB/s]\n","Finding representations: 100%|██████████| 59/59 [02:23<00:00,  2.43s/it]\n"]},{"output_type":"stream","name":"stdout","text":["24-06-20 23:52:49 - There are now 61 representations in ds_model_vggface_detector_opencv_aligned_normalization_base_expand_0.pkl\n","24-06-20 23:52:49 - Searching /content/Training Images/Tannishtha Roy Chowdhury /14CB4572-63E4-448D-8FB5-FA73CBAA744A.jpg in 61 length datastore\n","24-06-20 23:52:51 - find function duration 145.48644638061523 seconds\n","[                                            identity  \\\n","0  /content/Training Images/Tannishtha Roy Chowdh...   \n","1  /content/Training Images/Tannishtha Roy Chowdh...   \n","2  /content/Training Images/Tannishtha Roy Chowdh...   \n","3  /content/Training Images/Tannishtha Roy Chowdh...   \n","\n","                                       hash  target_x  target_y  target_w  \\\n","0  9a7433e1d80f8104b6e081c2925bda5b22375334        56       179       924   \n","1  c64ac0ff7901df30d64e3f10da2cdffad591224f       249       564      1788   \n","2  f919648cad21a1ac6fed572902cbb2e596737875       -94       111       529   \n","3  a12b710e0c08f854fea6ae08b5ffd557f432cb22       299       758      1718   \n","\n","   target_h  source_x  source_y  source_w  source_h  threshold      distance  \n","0       924        56       179       924       924       0.68 -2.220446e-16  \n","1      1788        56       179       924       924       0.68  4.609781e-01  \n","2       529        56       179       924       924       0.68  5.640245e-01  \n","3      1718        56       179       924       924       0.68  5.768813e-01  ]\n","                                            identity  \\\n","0  /content/Training Images/Tannishtha Roy Chowdh...   \n","1  /content/Training Images/Tannishtha Roy Chowdh...   \n","2  /content/Training Images/Tannishtha Roy Chowdh...   \n","3  /content/Training Images/Tannishtha Roy Chowdh...   \n","\n","                                       hash  target_x  target_y  target_w  \\\n","0  9a7433e1d80f8104b6e081c2925bda5b22375334        56       179       924   \n","1  c64ac0ff7901df30d64e3f10da2cdffad591224f       249       564      1788   \n","2  f919648cad21a1ac6fed572902cbb2e596737875       -94       111       529   \n","3  a12b710e0c08f854fea6ae08b5ffd557f432cb22       299       758      1718   \n","\n","   target_h  source_x  source_y  source_w  source_h  threshold      distance  \n","0       924        56       179       924       924       0.68 -2.220446e-16  \n","1      1788        56       179       924       924       0.68  4.609781e-01  \n","2       529        56       179       924       924       0.68  5.640245e-01  \n","3      1718        56       179       924       924       0.68  5.768813e-01  \n"]}]},{"cell_type":"code","source":["from deepface import DeepFace\n","import os\n","from sklearn.metrics import accuracy_score\n","\n","# Set the paths\n","train_dir = '/content/Training Images'\n","test_dir = '/content/drive/MyDrive/Testing Images'\n","\n","# Verify the directory structure\n","print(\"Training images:\")\n","print(os.listdir(train_dir))\n","print(\"Testing images:\")\n","print(os.listdir(test_dir))\n","\n","# List of models to evaluate\n","models = [\"Facenet\", \"OpenFace\", \"DeepFace\"]\n","\n","# Function to get image paths\n","def get_image_paths(directory):\n","    image_paths = []\n","    for root, _, files in os.walk(directory):\n","        for file in files:\n","            if file.endswith(('png', 'jpg', 'jpeg', 'jpg')):\n","                image_paths.append(os.path.join(root, file))\n","    return image_paths\n","\n","# Get training and testing image paths\n","train_image_paths = get_image_paths(train_dir)\n","test_image_paths = get_image_paths(test_dir)\n","\n","# Example model evaluation function\n","def evaluate_model(model_name):\n","    print(f\"Evaluating model: {model_name}\")\n","    y_true = []\n","    y_pred = []\n","\n","    # For each test image, find the most similar image in the training set\n","    for test_image in test_image_paths:\n","        try:\n","            result = DeepFace.find(img_path=test_image, db_path=train_dir, model_name=model_name, enforce_detection=False, detector_backend='opencv')\n","            if len(result) > 0:\n","                most_similar_image = result[0].iloc[0]['identity']  # Correctly access the 'identity' column\n","\n","                # Get the true label (folder name) of the test image\n","                true_label = os.path.basename(os.path.dirname(test_image))\n","                # Get the predicted label (folder name) of the most similar training image\n","                pred_label = os.path.basename(os.path.dirname(most_similar_image))\n","\n","                y_true.append(true_label)\n","                y_pred.append(pred_label)\n","\n","                # Print debug information\n","                print(f\"Test Image: {test_image}\")\n","                print(f\"Most Similar Image: {most_similar_image}\")\n","                print(f\"True Label: {true_label}\")\n","                print(f\"Predicted Label: {pred_label}\")\n","        except Exception as e:\n","            print(f\"Error processing {test_image}: {str(e)}\")\n","\n","    # Check for empty lists\n","    if not y_true or not y_pred:\n","        print(f\"No predictions made for model {model_name}. Please check your dataset and paths.\")\n","        return\n","\n","    # Print true and predicted labels for further debugging\n","    print(\"True labels: \", y_true)\n","    print(\"Predicted labels: \", y_pred)\n","\n","    # Calculate accuracy\n","    accuracy = accuracy_score(y_true, y_pred)\n","    print(f\"Accuracy for model {model_name}: {accuracy * 100:.2f}%\")\n","\n","# Evaluate all models\n","for model in models:\n","    evaluate_model(model)\n"],"metadata":{"id":"dOptAIMZUnay","outputId":"5b5474c0-dd31-43c9-b47c-a1551edd3593","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718928063772,"user_tz":-330,"elapsed":319760,"user":{"displayName":"Tannishtha Roy Chowdhury","userId":"14832516516534713487"}}},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Training images:\n","['Aishi Sarkar', 'ds_model_vggface_detector_opencv_aligned_normalization_base_expand_0.pkl', 'Om Sarkar', 'Shreya Singha Roy ', 'Tannishtha Roy Chowdhury ', 'Debarati Sarkar']\n","Testing images:\n","['1000221691.webp', '1000226089.jpg', '1000204691.jpg', 'IMG_1916.JPG', '1000240110.jpg', '1000243414.jpg', 'IMG_20230311_100830_258_Original.JPG', 'IMG_20230311_133422_151_Original.JPG', 'IMG_1839.JPG', 'IMG_3251.JPG', 'IMG_5741.JPG', 'IMG_20230311_190326_Original.JPG', 'IMG_6073.JPG', 'IMG_6074.JPG', '1000239927.jpg']\n","Evaluating model: Facenet\n","24-06-20 23:55:46 - Found 59 newly added image(s), 0 removed image(s), 0 replaced image(s).\n"]},{"output_type":"stream","name":"stderr","text":["\rFinding representations:   0%|          | 0/59 [00:00<?, ?it/s]"]},{"output_type":"stream","name":"stdout","text":["24-06-20 23:55:51 - facenet_weights.h5 will be downloaded...\n"]},{"output_type":"stream","name":"stderr","text":["Downloading...\n","From: https://github.com/serengil/deepface_models/releases/download/v1.0/facenet_weights.h5\n","To: /root/.deepface/weights/facenet_weights.h5\n","\n","  0%|          | 0.00/92.2M [00:00<?, ?B/s]\u001b[A\n","  1%|          | 524k/92.2M [00:00<00:26, 3.48MB/s]\u001b[A\n","  4%|▍         | 3.67M/92.2M [00:00<00:05, 17.1MB/s]\u001b[A\n"," 16%|█▌        | 14.7M/92.2M [00:00<00:01, 54.6MB/s]\u001b[A\n"," 28%|██▊       | 25.7M/92.2M [00:00<00:00, 74.9MB/s]\u001b[A\n"," 40%|████      | 37.2M/92.2M [00:00<00:00, 88.8MB/s]\u001b[A\n"," 51%|█████     | 47.2M/92.2M [00:00<00:00, 92.1MB/s]\u001b[A\n"," 63%|██████▎   | 58.2M/92.2M [00:00<00:00, 97.5MB/s]\u001b[A\n"," 76%|███████▌  | 69.7M/92.2M [00:00<00:00, 103MB/s] \u001b[A\n"," 87%|████████▋ | 80.2M/92.2M [00:00<00:00, 101MB/s]\u001b[A\n","100%|██████████| 92.2M/92.2M [00:01<00:00, 84.6MB/s]\n","Finding representations: 100%|██████████| 59/59 [01:49<00:00,  1.86s/it]\n"]},{"output_type":"stream","name":"stdout","text":["24-06-20 23:57:36 - There are now 61 representations in ds_model_facenet_detector_opencv_aligned_normalization_base_expand_0.pkl\n","24-06-20 23:57:36 - Searching /content/drive/MyDrive/Testing Images/1000226089.jpg in 61 length datastore\n","24-06-20 23:57:45 - find function duration 119.53502130508423 seconds\n","Test Image: /content/drive/MyDrive/Testing Images/1000226089.jpg\n","Most Similar Image: /content/Training Images/Tannishtha Roy Chowdhury /IMG_6220.JPG\n","True Label: Testing Images\n","Predicted Label: Tannishtha Roy Chowdhury \n","24-06-20 23:57:45 - Searching /content/drive/MyDrive/Testing Images/1000204691.jpg in 61 length datastore\n","24-06-20 23:57:58 - find function duration 12.920741319656372 seconds\n","Test Image: /content/drive/MyDrive/Testing Images/1000204691.jpg\n","Most Similar Image: /content/Training Images/Shreya Singha Roy /71b71e0d-c4b5-4aad-bd0f-cb4d7002c3a0.jpg\n","True Label: Testing Images\n","Predicted Label: Shreya Singha Roy \n","24-06-20 23:57:58 - Searching /content/drive/MyDrive/Testing Images/1000240110.jpg in 61 length datastore\n","24-06-20 23:58:04 - find function duration 5.963108539581299 seconds\n","Test Image: /content/drive/MyDrive/Testing Images/1000240110.jpg\n","Most Similar Image: /content/Training Images/Tannishtha Roy Chowdhury /IMG_6218.JPG\n","True Label: Testing Images\n","Predicted Label: Tannishtha Roy Chowdhury \n","24-06-20 23:58:04 - Searching /content/drive/MyDrive/Testing Images/1000243414.jpg in 61 length datastore\n","24-06-20 23:58:20 - find function duration 15.632045984268188 seconds\n","Test Image: /content/drive/MyDrive/Testing Images/1000243414.jpg\n","Most Similar Image: /content/Training Images/Shreya Singha Roy /71b71e0d-c4b5-4aad-bd0f-cb4d7002c3a0.jpg\n","True Label: Testing Images\n","Predicted Label: Shreya Singha Roy \n","24-06-20 23:58:20 - Searching /content/drive/MyDrive/Testing Images/1000239927.jpg in 61 length datastore\n","24-06-20 23:58:43 - find function duration 22.891547203063965 seconds\n","Test Image: /content/drive/MyDrive/Testing Images/1000239927.jpg\n","Most Similar Image: /content/Training Images/Tannishtha Roy Chowdhury /IMG_6219.JPG\n","True Label: Testing Images\n","Predicted Label: Tannishtha Roy Chowdhury \n","True labels:  ['Testing Images', 'Testing Images', 'Testing Images', 'Testing Images', 'Testing Images']\n","Predicted labels:  ['Tannishtha Roy Chowdhury ', 'Shreya Singha Roy ', 'Tannishtha Roy Chowdhury ', 'Shreya Singha Roy ', 'Tannishtha Roy Chowdhury ']\n","Accuracy for model Facenet: 0.00%\n","Evaluating model: OpenFace\n","24-06-20 23:58:43 - Found 59 newly added image(s), 0 removed image(s), 0 replaced image(s).\n"]},{"output_type":"stream","name":"stderr","text":["\rFinding representations:   0%|          | 0/59 [00:00<?, ?it/s]"]},{"output_type":"stream","name":"stdout","text":["24-06-20 23:58:46 - openface_weights.h5 will be downloaded...\n"]},{"output_type":"stream","name":"stderr","text":["Downloading...\n","From: https://github.com/serengil/deepface_models/releases/download/v1.0/openface_weights.h5\n","To: /root/.deepface/weights/openface_weights.h5\n","\n","  0%|          | 0.00/15.3M [00:00<?, ?B/s]\u001b[A\n","  3%|▎         | 524k/15.3M [00:00<00:03, 3.73MB/s]\u001b[A\n","100%|██████████| 15.3M/15.3M [00:00<00:00, 45.3MB/s]\n","Finding representations: 100%|██████████| 59/59 [01:28<00:00,  1.50s/it]\n"]},{"output_type":"stream","name":"stdout","text":["24-06-21 00:00:11 - There are now 61 representations in ds_model_openface_detector_opencv_aligned_normalization_base_expand_0.pkl\n","24-06-21 00:00:11 - Searching /content/drive/MyDrive/Testing Images/1000226089.jpg in 61 length datastore\n","24-06-21 00:00:17 - find function duration 94.13883018493652 seconds\n","Error processing /content/drive/MyDrive/Testing Images/1000226089.jpg: single positional indexer is out-of-bounds\n","24-06-21 00:00:17 - Searching /content/drive/MyDrive/Testing Images/1000204691.jpg in 61 length datastore\n","24-06-21 00:00:25 - find function duration 8.065181493759155 seconds\n","Test Image: /content/drive/MyDrive/Testing Images/1000204691.jpg\n","Most Similar Image: /content/Training Images/Shreya Singha Roy /95e59312-c8a6-4ec2-8697-38f85bdae382.jpg\n","True Label: Testing Images\n","Predicted Label: Shreya Singha Roy \n","24-06-21 00:00:25 - Searching /content/drive/MyDrive/Testing Images/1000240110.jpg in 61 length datastore\n","24-06-21 00:00:28 - find function duration 2.7581799030303955 seconds\n","Error processing /content/drive/MyDrive/Testing Images/1000240110.jpg: single positional indexer is out-of-bounds\n","24-06-21 00:00:28 - Searching /content/drive/MyDrive/Testing Images/1000243414.jpg in 61 length datastore\n","24-06-21 00:00:39 - find function duration 11.508575916290283 seconds\n","Error processing /content/drive/MyDrive/Testing Images/1000243414.jpg: single positional indexer is out-of-bounds\n","24-06-21 00:00:39 - Searching /content/drive/MyDrive/Testing Images/1000239927.jpg in 61 length datastore\n","24-06-21 00:01:00 - find function duration 21.121442317962646 seconds\n","Error processing /content/drive/MyDrive/Testing Images/1000239927.jpg: single positional indexer is out-of-bounds\n","True labels:  ['Testing Images']\n","Predicted labels:  ['Shreya Singha Roy ']\n","Accuracy for model OpenFace: 0.00%\n","Evaluating model: DeepFace\n","24-06-21 00:01:00 - Found 59 newly added image(s), 0 removed image(s), 0 replaced image(s).\n"]},{"output_type":"stream","name":"stderr","text":["Finding representations:   0%|          | 0/59 [00:00<?, ?it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Error processing /content/drive/MyDrive/Testing Images/1000226089.jpg: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.15. You need to downgrade your tf.\n","24-06-21 00:01:01 - Found 59 newly added image(s), 0 removed image(s), 0 replaced image(s).\n"]},{"output_type":"stream","name":"stderr","text":["Finding representations:   0%|          | 0/59 [00:00<?, ?it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Error processing /content/drive/MyDrive/Testing Images/1000204691.jpg: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.15. You need to downgrade your tf.\n","24-06-21 00:01:02 - Found 59 newly added image(s), 0 removed image(s), 0 replaced image(s).\n"]},{"output_type":"stream","name":"stderr","text":["Finding representations:   0%|          | 0/59 [00:00<?, ?it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Error processing /content/drive/MyDrive/Testing Images/1000240110.jpg: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.15. You need to downgrade your tf.\n","24-06-21 00:01:03 - Found 59 newly added image(s), 0 removed image(s), 0 replaced image(s).\n"]},{"output_type":"stream","name":"stderr","text":["Finding representations:   0%|          | 0/59 [00:00<?, ?it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Error processing /content/drive/MyDrive/Testing Images/1000243414.jpg: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.15. You need to downgrade your tf.\n","24-06-21 00:01:03 - Found 59 newly added image(s), 0 removed image(s), 0 replaced image(s).\n"]},{"output_type":"stream","name":"stderr","text":["Finding representations:   0%|          | 0/59 [00:00<?, ?it/s]"]},{"output_type":"stream","name":"stdout","text":["Error processing /content/drive/MyDrive/Testing Images/1000239927.jpg: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.15. You need to downgrade your tf.\n","No predictions made for model DeepFace. Please check your dataset and paths.\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"sdprOesOVJnG"},"execution_count":null,"outputs":[]}]}